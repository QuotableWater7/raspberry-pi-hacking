import os
import time

def clearTerminalWindow():
	os.system('cls' if os.name == 'nt' else 'clear')

gridX = 100
gridY = 8

words = [
	"Hello there",
	"this is jt"
]

letterMap = {
	"a": [[0, 6], [0, 5], [0, 4], [1, 3], [2, 2], [3, 3], [4, 4], [2, 4], [4, 5], [4, 6]],
	"b": [[0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [1, 2], [2, 2], [3, 3], [2, 4], [1, 4], [3, 5], [2, 6], [1, 6]],
	"c": [[1, 2], [2, 2], [3, 2], [0, 3], [0, 4], [0, 5], [1, 6], [2, 6], [3, 6]],
	"d": [[0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [1, 2], [2, 2], [3, 3], [3, 4], [3, 5], [2, 6], [1, 6]],
	"e": [[0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [1, 6], [2, 6], [1, 2], [2, 2], [1, 4], [2, 4]],
	"f": [[0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [1, 2], [2, 2], [3, 2], [1, 4], [2, 4], [3, 4]],
	"g": [[1, 2], [2, 2], [0, 3], [0, 4], [0, 5], [1, 6], [2, 6], [3, 5], [3, 4], [2, 4]],
	"h": [[0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [3, 6], [3, 5], [3, 4], [3, 3], [3, 2], [1, 4], [2, 4]],
	"i": [[0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [0, 6], [1, 6], [2, 6], [3, 6], [4, 6], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6]],
	"j": [[4, 2], [4, 3], [4, 4], [4, 5], [3, 6], [2, 6], [1, 6], [0, 5]],
	"k": [[0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [1, 4], [2, 3], [3, 2], [2, 5], [3, 6]],
	"l": [[0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [1, 6], [2, 6]],
	"m": [[0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [1, 3], [2, 4], [3, 3], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6]],
	"n": [[0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [1, 3], [2, 4], [3, 5], [4, 6], [4, 5], [4, 4], [4, 3], [4, 2]],
	"o": [[2, 2], [3, 2], [4, 3], [4, 4], [4, 5], [3, 6], [2, 6], [1, 6], [0, 5], [0, 4], [0, 3], [1, 2]],
	"p": [[0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [1, 2], [2, 2], [3, 3], [2, 4], [1, 4]],
	"q": [[2, 2], [3, 2], [4, 3], [4, 4], [4, 5], [3, 6], [2, 6], [1, 6], [0, 5], [0, 4], [0, 3], [1, 2], []],
	"r": [[0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [1, 2], [2, 2], [3, 3], [2, 4], [1, 4], [3, 5], [4, 6]],
	"s": [[3, 2], [2, 2], [1, 2], [0, 3], [1, 4], [2, 4], [3, 5], [2, 6], [1, 6], [0, 6]],
	"t": [[2, 6], [2, 5], [2, 4], [2, 3], [2, 2], [0, 2], [1, 2], [3, 2], [4, 2]],
	"u": [[0, 2], [0, 3], [0, 4], [0, 5], [1, 6], [2, 6], [3, 5], [3, 4], [3, 3], [3, 2]],
	"v": [[0, 2], [0, 3], [1, 4], [1, 5], [2, 6], [3, 5], [3, 4], [4, 3], [4, 2]],
	"w": [[0, 2], [0, 3], [1, 4], [1, 5], [2, 6], [3, 5], [3, 4], [4, 3], [4, 2], [5, 3], [5, 4], [6, 5], [6, 6], [7, 5], [7, 4], [8, 3], [8, 2]],
	"x": [[0, 2], [1, 3], [2, 4], [3, 5], [4, 6], [0, 6], [1, 5], [3, 3], [4, 2]],
	"y": [[0, 2], [1, 3], [2, 4], [3, 3], [4, 2], [2, 5], [2, 6]],
	"z": [[0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [3, 3], [2, 4], [1, 5], [0, 6], [1, 6], [2, 6], [3, 6], [4, 6]],
}

def drawLetter(matrix, letter, xPos):
	if letter == " ":
		return xPos + 2

	items = letterMap[letter]

	maxX = xPos

	for coord in items:
		x = coord[0] + xPos
		y = coord[1]

		if x < gridX and y < gridY and x >= 0 and y >= 0:
			matrix[x][y] = 1

		maxX = max(maxX, x)

	return maxX + 2

def createEmptyMatrix():
	return [[0 for i in range(gridY)] for j in range(gridX)]

def printMatrix(matrix):
	for i in range(gridY):
		for j in range(gridX):
			print('@' if matrix[j][i] == 1 else ' ', end='', flush=True)
		print(flush=True)

def resetMatrix(matrix):
	for i in range(len(matrix)):
		row = matrix[i]

		for j in range(len(row)):
			row[j] = 0

def main():
	matrix = createEmptyMatrix()

	for word in words:
		offset = 0
		# for offset in reversed(range(0, gridX, 2)):
		while True:
			x = gridX - offset

			for letter in word.lower():
				x = drawLetter(matrix, letter, x)

			clearTerminalWindow()
			printMatrix(matrix)
			resetMatrix(matrix)
			time.sleep(.15)

			if x < 0:
				break

			offset += 3

main()
